<canvas title="Test best positions">
  <include href="debugging.lzx"/>
  <include href="../src/library.lzx"/>

  <view id="neighbor" width="200" height="300" bgcolor="green"
        opacity=".5"
         onmousedown="Dragger.start(this); dragState.apply()"
         onmouseup="Dragger.stop(this); dragState.remove()">
    <state name="dragState">
      <attribute name="_" value="${f(Dragger.handleMouseMove(this,
                                 canvas.getMouse('x'),
                                 canvas.getMouse('y')))}"/>
    </state>
    <view name="resizeHandle" width="20" height="20" align="right" valign="bottom" bgcolor="black"/>
  </view>

  <view id="refContainer" width="800" height="600">
    <view width="100%" height="100%" bgcolor="blue" opacity=".1"/>
    <view id="ref" width="100" height="200" bgcolor="blue"
          onmousedown="Dragger.start(this); dragState.apply()"
          onmouseup="Dragger.stop(this); dragState.remove()">
      <state name="dragState">
        <attribute name="_" value="${f(Dragger.handleMouseMove(this,
                                   canvas.getMouse('x'),
                                   canvas.getMouse('y')))}"/>
      </state>
      <view name="resizeHandle" width="20" height="20" align="right" valign="bottom" bgcolor="black"/>
    </view>
  </view>

  <view id="gMessageLayer">
    <view width="150" height="150" bgcolor="red" opacity=".1"
          onmousedown="Dragger.start(this); dragState.apply()"
          onmouseup="Dragger.stop(this); dragState.remove()">
      <state name="dragState">
        <attribute name="_" value="${f(Dragger.handleMouseMove(this,
                                   canvas.getMouse('x'),
                                   canvas.getMouse('y')))}"/>
      </state>
      <view name="resizeHandle" width="20" height="20" align="right" valign="bottom" bgcolor="black"/>
    </view>
  </view>

  <script>
    refContainer.set({x: 0, y: 10, width: 704, height: 565});
    //ref.set({x: 326, y: -115, width: 208.421052631579, height: 528});
    ref.set({y: 313.95, x: 357, height: 528, width: 208.421052631579});
    //ref.makeDraggable();
    function f() {
      neighbor.moveNextTo(ref, {container:refContainer});
      return;
      var pos = findBestRelativePosition(neighbor, ref, refContainer, 10);
      neighbor.set({x: pos.x, y: pos.y});
      //if (arguments.length) info(pos);
    }
    f.defer();
    function reset() {
      global.findBestRelativePosition = global.oldFindBestRelativePosition;
    }
  </script>
</canvas>